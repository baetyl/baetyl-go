syntax = "proto3";

package link;

option (gogoproto.sizer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.testgen_all) = true;
option (gogoproto.benchgen_all) = true;
option (gogoproto.populate_all) = true;
option (gogoproto.equal_all) = true;
option (gogoproto.gostring_all) = true;
// option (gogoproto.verbose_equal_all) = true;
// option (gogoproto.goproto_stringer_all) = false;
// option (gogoproto.stringer_all) =  true;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

enum Type {
    option (gogoproto.goproto_enum_prefix) = false;
    Msg    = 0; // 0: message
    MsgRtn = 1; // 1: message with retain flag
    Ack    = 2; // 2: acknowledge
}

message Context {
    uint64 ID    = 1;
    uint64 TS    = 2;
    uint32 QOS   = 3;
    Type   Type  = 4;
    string Topic = 5;
}

message Message {
    Context Context = 1 [(gogoproto.nullable) = false];
    bytes Content   = 2;
}

service Link {
    rpc Talk (stream Message) returns (stream Message) {}
    rpc Call (Message) returns (Message) {}
}

// protoc -I=. -I=$GOPATH/src -I=$GOPATH/src/github.com/gogo/protobuf/protobuf --gogofaster_out=plugins=grpc:. link.proto